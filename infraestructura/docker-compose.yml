# Integraci√≥n de Proyecto Desarrollo Web
version: '3.2'

volumes:
  keycloak_data:
      driver: local
  mysql_data:
      driver: local
  node_umg:
      driver: local

services:

  

  redis:
    container_name: some-redis
    image: redis
    ports: 
      - "6379:6379"
    networks:
        redes_data:
            ipv4_address: 172.20.0.2

  # db:
  #   image: mysql:5.7
  #   container_name: mysql57
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 'secret'
  #     MYSQL_USER: 'root'
  #     MYSQL_PASSWORD: 'secret'
  #   ports:
  #     - '3306:3306'
  #   expose:
  #     - '3306'
  #   volumes:
  #     - mysql_data:/var/lib/mysql 
  #   networks:
  #       redes_data:
  #           ipv4_address: 172.20.0.3
             
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   depends_on:
  #     - db
  #   container_name: phpmyadmin
  #   environment:
  #    - PMA_ARBITRARY=1
  #   restart: always
  #   ports:
  #    - 8181:80
  #   volumes:
  #    - sessions
  #   networks:
  #       redes_data:
  #           ipv4_address: 172.20.0.4

  eureka:
    container_name: eureka
    image: eureka
    privileged: true
    build:
        context: ./Eureka
        dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
        redes_data:
            ipv4_address: 172.20.0.5
    

  gateway:
    container_name: gateway
    image: gateway
    privileged: true
    build:
        context: ./Gateway
        dockerfile: Dockerfile
    ports:
      - "8887:8887"
    depends_on:
      - redis
    networks:
        redes_data:
            ipv4_address: 172.20.0.6
  # book:
  #   container_name: bookstore
  #   image: book
  #   privileged: true
  #   build:
  #       context: ./book
  #       dockerfile: Dockerfile
  #   ports:
  #     - "8889:8889"
  #   networks:
  #       redes_data:
  #           ipv4_address: 172.20.0.11



  # censo_app:
  #   container_name: censo_app
  #   image: censo
  #   restart: always
  #   privileged: true
  #   build:
  #       context: ./censo
  #       dockerfile: Dockerfile
  #   ports:
  #     - "8889:8889"
  #   depends_on:
  #     - db
  #   networks:
  #       redes_data:
  #           ipv4_address: 172.20.0.11


  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
        redes_data:
            ipv4_address: 172.20.0.7

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8080:8080
    networks:
        redes_data:
            ipv4_address: 172.20.0.8
    depends_on:
      - postgres

  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
        redes_data:
            ipv4_address: 172.20.0.9

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
        redes_data:
            ipv4_address: 172.20.0.10
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

    
  web:
    container_name: node
    image: node
    build:
        context: ./node_umg
        dockerfile: Dockerfile
    command: node src/index.js
    ports:
      - "3000:3000"
    volumes:
      - ./node_umg:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - "mongo"
    networks:
      redes_data:
          ipv4_address: 172.20.0.12
      
networks:
  redes_data:
      external:
            name: redes